{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure resource location"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Path to the nested templates used in this deployment"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "SAS token to access artifacts location (if required)"
      }
    },
    "mgmtRg": {
      "type": "string",
      "metadata": {
        "description": "Resource group for management components"
      }
    },
    "networkRg": {
      "type": "string",
      "metadata": {
        "description": "Resource group for networking components"
      }
    },
    "linuxRg": {
      "type": "string",
      "metadata": {
        "description": "Resource group for linux components"
      }
    },
    "windowsRg": {
      "type": "string",
      "metadata": {
        "description": "Resource group for windows components"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      },
      "defaultValue": "[concat('storage', uniqueString(parameters('mgmtRg')))]"
    },
    "fileShareName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Specifies the name of the File Share. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only."
      }
    },
    "zipFileRepo": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "zipFilePath": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "hubNetwork": {
      "type": "object",
      "metadata": {
        "description": "description"
      }
    },
    "virtualNetworks": {
      "type": "array",
      "metadata": {
        "description": "description"
      }
    },
    "routeTables": {
      "type": "array",
      "metadata": {
        "description": "description"
      }
    },
    "vnetPeers": {
      "type": "array",
      "metadata": {
        "description": "description"
      }
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "vmssList": {
      "type": "array"
    }
  },
  "functions": [],
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "location": "[parameters('location')]",
      "name": "[parameters('mgmtRg')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "location": "[parameters('location')]",
      "name": "[parameters('networkRg')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "location": "[parameters('location')]",
      "name": "[parameters('linuxRg')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "location": "[parameters('location')]",
      "name": "[parameters('windowsRg')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "storageDeployment",
      "resourceGroup": "[parameters('mgmtRg')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('mgmtRg'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "fileShareName": {
              "type": "string"
            },
            "zipFileRepo": {
              "type": "string"
            },
            "zipFilePath": {
              "type": "string"
            }
          },
          "variables": {
            "storageDeploy": "[uri(parameters('_artifactsLocation'), concat('nested/provisionStorage.json', parameters('_artifactsLocationSasToken')))]",
            "transferFiles": "[uri(parameters('_artifactsLocation'), concat('nested/transferFiles.json', parameters('_artifactsLocationSasToken')))]"
          },
          "resources": [
            {
              "name": "storageDeploy",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2018-02-01",
              "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri": "[variables('storageDeploy')]",
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "fileShareName": {
                    "value": "[parameters('fileShareName')]"
                  }
                }
              }
            },
            {
              "name": "transferFiles",
              "dependsOn": [
                "storageDeploy"
              ],
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2018-02-01",
              "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri": "[variables('transferFiles')]",
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "fromVolume": {
                    "value": {
                      "name": "repovol",
                      "gitRepo": {
                        "repository": "[parameters('zipFileRepo')]"
                      }
                    }
                  },
                  "toVolume": {
                    "value": {
                      "name": "sharevol",
                      "azureFile": {
                        "shareName": "[parameters('fileShareName')]",
                        "storageAccountName": "[parameters('storageAccountName')]",
                        "storageAccountKey": "[reference('storageDeploy').outputs.storageAccountKey.value]"
                      }
                    }
                  },
                  "zipFilePath": {
                    "value": "[parameters('zipFilePath')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "storageAccountKey": {
              "type": "string",
              "value": "[reference('storageDeploy').outputs.storageAccountKey.value]"
            }
          }
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "fileShareName": {
            "value": "[parameters('fileShareName')]"
          },
          "zipFileRepo": {
            "value": "[parameters('zipFileRepo')]"
          },
          "zipFilePath": {
            "value": "[parameters('zipFilePath')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "automationDeployment",
      "resourceGroup": "[parameters('mgmtRg')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('mgmtRg'))]",
        "storageDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountKey": {
              "type": "string"
            },
            "fileShareName": {
              "type": "string"
            }
          },
          "variables": {
            "automationAccountName": "[concat('DSC-',take(guid(resourceGroup().id),5))]",
            "provisionAutomation": "[uri(parameters('_artifactsLocation'), concat('nested/provisionAutomation.json', parameters('_artifactsLocationSasToken')))]"
          },
          "resources": [
            {
              "name": "automationDeploy",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2018-02-01",
              "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri": "[variables('provisionAutomation')]",
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "automationAccountName": {
                    "value": "[variables('automationAccountName')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "storageAccountKey": {
                    "value": "[parameters('storageAccountKey')]"
                  },
                  "fileShareName": {
                    "value": "[parameters('fileShareName')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "automationAccountName": {
              "type": "string",
              "value": "[reference('automationDeploy').outputs.automationAccountName.value]"
            }
          }
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountKey": {
            "value": "[reference('storageDeployment').outputs.storageAccountKey.value]"
          },
          "fileShareName": {
            "value": "[parameters('fileShareName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "networkDeployment",
      "resourceGroup": "[parameters('networkRg')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('networkRg'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "string"
            },
            "hubNetwork": {
              "type": "object"
            },
            "virtualNetworks": {
              "type": "array"
            },
            "routeTables": {
              "type": "array"
            },
            "vnetPeers": {
              "type": "array"
            }
          },
          "variables": {
            "provisionNetwork": "[uri(parameters('_artifactsLocation'), concat('nested/provisionNetwork.json', parameters('_artifactsLocationSasToken')))]"
          },
          "resources": [
            {
              "name": "networkDeploy",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2018-02-01",
              "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri": "[variables('provisionNetwork')]",
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "hubNetwork": {
                    "value": "[parameters('hubNetwork')]"
                  },
                  "virtualNetworks": {
                    "value": "[parameters('virtualNetworks')]"
                  },
                  "routeTables": {
                    "value": "[parameters('routeTables')]"
                  },
                  "vnetPeers": {
                    "value": "[parameters('vnetPeers')]"
                  }
                }
              }
            }
          ],
          "outputs": {}
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "hubNetwork": {
            "value": "[parameters('hubNetwork')]"
          },
          "virtualNetworks": {
            "value": "[parameters('virtualNetworks')]"
          },
          "routeTables": {
            "value": "[parameters('routeTables')]"
          },
          "vnetPeers": {
            "value": "[parameters('vnetPeers')]"
          }
        }
      }
    },
    {
      "copy": {
        "name": "vmScaleSets",
        "count": "[length(parameters('vmssList'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "vmScaleSetDeployment",
      "resourceGroup": "[parameters('vmssList')[copyIndex('vmScaleSets')].appRg]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('vmssList')[copyIndex('vmScaleSets')].appRg)]",
        "storageDeployment",
        "automationDeployment",
        "networkDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "securestring"
            },
            "automationAccountName": {
              "type": "string"
            },
            "mgmtRg": {
              "type": "string"
            },
            "networkRg": {
              "type": "string"
            },
            "vmssList": {
              "type": "array"
            }
          },
          "variables": {
            "provisionScaleSet": "[uri(parameters('_artifactsLocation'), concat('nested/provisionScaleSet.json', parameters('_artifactsLocationSasToken')))]"
          },
          "resources": [
            {
              "name": "vmScaleSetDeploy",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2018-02-01",
              "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri": "[variables('provisionScaleSet')]",
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "automationAccountName": {
                    "value": "[parameters('automationAccountName')]"
                  },
                  "mgmtRg": {
                    "value": "[parameters('mgmtRg')]"
                  },
                  "networkRg": {
                    "value": "[parameters('networkRg')]"
                  },
                  "vmssParams": {
                    "value": "[parameters('vmssList')[copyIndex('vmScaleSets')]]"
                  }
                }
              }
            }
          ],
          "outputs": {}
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "automationAccountName": {
            "value": "[reference('automationDeployment').outputs.automationAccountName.value]"
          },
          "mgmtRg": {
            "value": "[parameters('mgmtRg')]"
          },
          "networkRg": {
            "value": "[parameters('networkRg')]"
          },
          "vmssList": {
            "value": "[parameters('vmssList')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
