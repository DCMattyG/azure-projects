{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Path to the nested templates used in this deployment"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "SAS token to access artifacts location, if required"
      },
      "defaultValue": ""
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "userName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Username"
      }
    },
    "userPass": {
      "type": "securestring",
      "metadata": {
        "description": "Virtual Machine Password"
      }
    },
    "vmNetwork": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Target vNet Name"
      }
    },
    "vmSubnet": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Target Subnet Name (subnet exists inside vmNetwork)"
      }
    },
    "vmNetRG": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Target vNet Resource Group (if different from VM resource group)"
      },
      "defaultValue": ""
    },
    "vmPrivateIP": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Private IP Address (static)"
      }
    },
    "vmPublicIP": {
      "type": "bool",
      "metadata": {
        "description": "Deploy Virtual Machine Public IP Address (true/false)"
      },
      "defaultValue": false
    },
    "trustedEndpoints": {
      "type": "array",
      "metadata": {
        "description": "DNS Forwarder Trusted IP's and/or CIDR Addresses (allow list)"
      }
    }
  },
  "functions": [],
  "variables": {
    "provisionPublicIp": "[uri(parameters('_artifactsLocation'), concat('nested/publicIpAddress.json', parameters('_artifactsLocationSasToken')))]",
    "privateIpAddressConfig": {
      "privateIPAllocationMethod": "Static",
      "privateIPAddress": "[parameters('vmPrivateIP')]",
      "subnet": {
        "id": "[variables('vmSubnetResourceId')]"
      }
    },
    "networkSecurityGroup": {
      "name": "[concat(parameters('vmName'), '-nsg-vnet-nic01')]",
      "rules": [
        {
          "name": "SSH",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
        },
        {
          "name": "DNS",
          "properties": {
            "priority": 310,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "53"
          }
        }
      ]
    },
    "imageReference": {
      "publisher": "canonical",
      "offer": "0001-com-ubuntu-server-focal",
      "sku": "20_04-lts",
      "version": "latest"
    },
    "virtualMachineSize": "Standard_B1ms",
    "osDiskType": "Premium_LRS",
    "vmSubnetResourceId": "[if(equals(parameters('vmNetRG'), ''),  resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vmNetwork'), parameters('vmSubnet')), resourceId(parameters('vmNetRG'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vmNetwork'), parameters('vmSubnet')))]"
  },
  "resources": [
    {
      "condition": "[parameters('vmPublicIP')]",
      "name": "provisionPublicIp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionPublicIp')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          }
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroup').name]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroup').rules]"
      }
    },
    {
      "name": "[concat(parameters('vmName'), '-nic01')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup').name)]",
        "provisionPublicIp"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": "[if(parameters('vmPublicIP'), union(variables('privateIpAddressConfig'), reference('provisionPublicIp').outputs.publicIpAddressConfig.value), variables('privateIpAddressConfig'))]"
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup').name)]"
        }
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-nic01'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-nic01'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('userPass')]"
        }
      }
    },
    {
      "name": "[concat(parameters('vmName'), '/CustomScriptExtension')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {
          "commandToExecute": "[concat('./bindConfig.sh', ' ', string(parameters('trustedEndpoints')))]",
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), 'scripts/bindConfig.sh', parameters('_artifactsLocationSasToken'))]",
            "[concat(parameters('_artifactsLocation'), 'data/named.conf.options', parameters('_artifactsLocationSasToken'))]"
          ]
        }
      }
    }
  ],
  "outputs": {}
}
