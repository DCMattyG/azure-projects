{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Path to the nested templates used in this deployment"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "SAS token to access artifacts location, if required"
      },
      "defaultValue": ""
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Domain Controller VM Name"
      }
    },
    "userName": {
      "type": "string",
      "metadata": {
        "description": "Domain Admin Username"
      }
    },
    "userPass": {
      "type": "securestring",
      "metadata": {
        "description": "Domain Admin Password"
      }
    },
    "safeModePass": {
      "type": "securestring",
      "metadata": {
        "description": "Domain Safe Mode Password"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Domain Name (FQDN)"
      }
    },
    "existingNetwork": {
      "type": "bool",
      "metadata": {
        "description": "New or Existing Virtual Network ('false' will deploy a new vNet)"
      },
      "defaultValue": false
    },
    "vnetParams": {
      "type": "object",
      "metadata": {
        "description": "Details of Existing Virtual Network/Subnet (if 'existingNetwork' is set to 'true')"
      },
      "defaultValue": {}
    },
    "createPublicIP": {
      "type": "bool",
      "metadata": {
        "description": "Optionally Deploy a Public IP to the Domain Controller ('true' will create a public IP)"
      },
      "defaultValue": true
    }
  },
  "functions": [],
  "variables": {
    "provisionAutomation": "[uri(parameters('_artifactsLocation'), concat('nested/automation.json', parameters('_artifactsLocationSasToken')))]",
    "provisionPublicIp": "[uri(parameters('_artifactsLocation'), concat('nested/publicIpAddress.json', parameters('_artifactsLocationSasToken')))]",
    "provisionNetworking": "[uri(parameters('_artifactsLocation'), concat('nested/networking.json', parameters('_artifactsLocationSasToken')))]",
    "provisionVirtualMachine": "[uri(parameters('_artifactsLocation'), concat('nested/virtualMachine.json', parameters('_artifactsLocationSasToken')))]",
    "updateNetworkDns": "[uri(parameters('_artifactsLocation'), concat('nested/updateDns.json', parameters('_artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "name": "provisionAutomation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionAutomation')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "userName": {
            "value": "[parameters('userName')]"
          },
          "userPass": {
            "value": "[parameters('userPass')]"
          },
          "safeModePass": {
            "value": "[parameters('safeModePass')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[parameters('createPublicIP')]",
      "name": "provisionPublicIp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionPublicIp')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          }
        }
      }
    },
    {
      "name": "provisionNetworking",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionNetworking')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "createPublicIP": {
            "value": "[parameters('createPublicIP')]"
          },
          "publicIpAddressName": {
            "value": "[if(parameters('createPublicIP'), reference('provisionPublicIp').outputs.publicIpAddressName.value, '')]"
          },
          "existingNetwork": {
            "value": "[parameters('existingNetwork')]"
          },
          "vnetParams": {
            "value": "[parameters('vnetParams')]"
          }
        }
      },
      "dependsOn": ["provisionPublicIp"]
    },
    {
      "name": "provisionVirtualMachine",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionVirtualMachine')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "userName": {
            "value": "[parameters('userName')]"
          },
          "userPass": {
            "value": "[parameters('userPass')]"
          },
          "vNicName": {
            "value": "[reference('provisionNetworking').outputs.vNicName.value]"
          },
          "automationAccountName": {
            "value": "[reference('provisionAutomation').outputs.automationAccountName.value]"
          }
        }
      },
      "dependsOn": [
        "provisionAutomation",
        "provisionNetworking"
      ]
    },
    {
      "name": "updateNetworkDns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateNetworkDns')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetwork": {
            "value": "[reference('provisionNetworking').outputs.virtualNetwork.value]"
          },
          "dnsServer": {
            "value": "[reference('provisionNetworking').outputs.dnsServer.value]"
          }
        }
      },
      "dependsOn": [
        "provisionVirtualMachine"
      ]
    }
  ],
  "outputs": {}
}
