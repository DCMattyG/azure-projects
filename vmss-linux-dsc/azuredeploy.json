{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Azure location to deploy all resources"
      },
      "allowedValues": [
        "japaneast",
        "eastus2",
        "westeurope",
        "southeastasia",
        "southcentralus",
        "australiaeast",
        "koreacentral",
        "westus2",
        "brazilsouth",
        "uksouth",
        "westcentralus",
        "northeurope",
        "canadacentral",
        "australiasoutheast",
        "centralindia",
        "francecentral"
        ]
    },
    "appName": {
        "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "automationAccountName": {
      "type": "String"
    },
    "nodeConfigurationName": {
      "type": "String"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Path to the nested templates used in this deployment"
      },
      "defaultValue": "https://raw.githubusercontent.com/DCMattyG/azure-projects/master/vmss-linux-dsc/"
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "SAS token to access artifacts location, if required"
      },
      "defaultValue": ""
    }
  },
  "functions": [],
  "variables": {
    "publicIpAddress": "[uri(parameters('_artifactsLocation'), concat('nested/publicIpAddress.json', parameters('_artifactsLocationSasToken')))]",
    "networking": "[uri(parameters('_artifactsLocation'), concat('nested/networking.json', parameters('_artifactsLocationSasToken')))]",
    "loadBalancer": "[uri(parameters('_artifactsLocation'), concat('nested/loadBalancer.json', parameters('_artifactsLocationSasToken')))]",
    "vmScaleSet": "[uri(parameters('_artifactsLocation'), concat('nested/vmScaleSet.json', parameters('_artifactsLocationSasToken')))]",
    "vmScaleSetAutomation": "[uri(parameters('_artifactsLocation'), concat('nested/vmScaleSetAutomation.json', parameters('_artifactsLocationSasToken')))]",
    "cloudInitData": "[concat('#include\n', uri(parameters('_artifactsLocation'), concat('/cloud-init/cloud-init.txt', parameters('_artifactsLocationSasToken'))))]"
  },
  "resources": [
    {
      "name": "publicIpAddress",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicIpAddress')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          }
        }
      }
    },
    {
      "name": "networking",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('networking')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          }
        }
      }
    },
    {
      "name": "loadBalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('loadBalancer')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          }
        }
      },
      "dependsOn": ["publicIpAddress"]
    },
    // {
    //   "name": "vmScaleSet",
    //   "type": "Microsoft.Resources/deployments",
    //   "apiVersion": "2018-02-01",
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[variables('vmScaleSet')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "location": {
    //         "value": "[parameters('location')]"
    //       },
    //       "appName": {
    //         "value": "[parameters('appName')]"
    //       },
    //       "adminUsername": {
    //         "value": "[parameters('adminUsername')]"
    //       },
    //       "adminPassword": {
    //         "value": "[parameters('adminPassword')]"
    //       },
    //       "virtualNetworkName": {
    //         "value": "[reference('networking').outputs.virtualNetworkName.value]"
    //       },
    //       "nsgName": {
    //         "value": "[reference('networking').outputs.nsgName.value]"
    //       },
    //       "loadBalancerName": {
    //         "value": "[reference('loadBalancer').outputs.loadBalancerName.value]"
    //       },
    //       "backendPoolName": {
    //         "value": "[reference('loadBalancer').outputs.backendPoolName.value]"
    //       }
    //     }
    //   },
    //   "dependsOn": [
    //     "publicIpAddress",
    //     "networking",
    //     "loadBalancer"
    //   ]
    // },
    {
      "name": "vmScaleSetAutomation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmScaleSetAutomation')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "automationAccountName": {
            "value": "[parameters('automationAccountName')]"
          },
          "nodeConfigurationName": {
            "value": "[parameters('nodeConfigurationName')]"
          },
          "cloudInitData": {
            "value": "[variables('cloudInitData')]"
          },
          "virtualNetworkName": {
            "value": "[reference('networking').outputs.virtualNetworkName.value]"
          },
          "nsgName": {
            "value": "[reference('networking').outputs.nsgName.value]"
          },
          "loadBalancerName": {
            "value": "[reference('loadBalancer').outputs.loadBalancerName.value]"
          },
          "backendPoolName": {
            "value": "[reference('loadBalancer').outputs.backendPoolName.value]"
          }
        }
      },
      "dependsOn": [
        "publicIpAddress",
        "networking",
        "loadBalancer"
      ]
    }
  ],
  "outputs": {}
}
